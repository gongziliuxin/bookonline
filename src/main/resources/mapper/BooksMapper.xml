<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.java.dao.BooksMapper">
  <resultMap id="BaseResultMap" type="com.java.bean.Books">
    <result column="b_id" jdbcType="INTEGER" property="bId" />
    <result column="b_isbn" jdbcType="VARCHAR" property="bIsbn" />
    <result column="b_name" jdbcType="VARCHAR" property="bName" />
    <result column="b_author" jdbcType="VARCHAR" property="bAuthor" />
    <result column="b_publisher" jdbcType="VARCHAR" property="bPublisher" />
    <result column="b_price" jdbcType="DOUBLE" property="bPrice" />
    <result column="b_coverPic" jdbcType="VARCHAR" property="bCoverpic" />
    <result column="b_introduction" jdbcType="VARCHAR" property="bIntroduction" />
    <result column="b_score" jdbcType="DOUBLE" property="bScore" />
    <result column="b_storage" jdbcType="INTEGER" property="bStorage" />
    <result column="b_sales" jdbcType="INTEGER" property="bSales" />
    <result column="b_discount" jdbcType="DOUBLE" property="bDiscount" />
    <result column="b_type" jdbcType="VARCHAR" property="bType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
    <update id="updateByExampleSelective" parameterType="map">
        update books
        <set>
            <if test="record.bId != null">
                b_id = #{record.bId,jdbcType=INTEGER},
            </if>
            <if test="record.bIsbn != null">
                b_isbn = #{record.bIsbn,jdbcType=VARCHAR},
            </if>
            <if test="record.bAuthor != null">
                b_author = #{record.bAuthor,jdbcType=VARCHAR},
            </if>
            <if test="record.bPublisher != null">
                b_publisher = #{record.bPublisher,jdbcType=VARCHAR},
            </if>
            <if test="record.bPrice != null">
                b_price = #{record.bPrice,jdbcType=DOUBLE},
            </if>
            <if test="record.bCoverpic != null">
                b_coverpic = #{record.bCoverpic,jdbcType=VARCHAR},
            </if>
            <if test="record.bIntroduction != null">
                b_introduction = #{record.bIntroduction,jdbcType=VARCHAR},
            </if>
            <if test="record.bScore != null">
                b_score = #{record.bScore,jdbcType=DOUBLE},
            </if>
            <if test="record.bStorage != null">
                b_storage = #{record.bStorage,jdbcType=INTEGER},
            </if>
            <if test="record.bSales != null">
                b_sales = #{record.bSales,jdbcType=INTEGER},
            </if>
            <if test="record.bDiscount != null">
                b_discount = #{record.bDiscount,jdbcType=DOUBLE},
            </if>
            <if test="record.bType != null">
                b_type = #{record.bType,jdbcType=VARCHAR},
            </if>


        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
  <sql id="Base_Column_List">
    b_id, b_isbn, b_name, b_author, b_publisher, b_price, b_coverPic, b_introduction, 
    b_score, b_storage, b_sales, b_discount, b_type
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from books
        where b_id = #{bId,jdbcType=INTEGER}
    </select>
  <select id="selectByExample" parameterType="com.java.bean.BooksExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from books
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
    <select id="selectByName" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from books
        where b_name = #{bName,jdbcType=CHAR}
    </select>
    <select id="selectByAuthor" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from books
        where b_author = #{bAuthor,jdbcType=CHAR}
    </select>
    <select id="selectByPublisher" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from books
        where b_publisher = #{bPublisher,jdbcType=CHAR}
    </select>
    <select id="selectByIsbn" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from books
        where b_isbn = #{bIsbn,jdbcType=CHAR}
    </select>
    <select id="selectByType" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from books
        where b_type = #{bType,jdbcType=CHAR}
    </select>
    <select id="selectHot" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from books
        where b_sales >=40 order by b_sales desc
    </select>
    <select id="selectByLike" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from books
        where b_name LIKE  CONCAT('%',#{bName},'%' )
    </select>

  <delete id="deleteByExample" parameterType="com.java.bean.BooksExample">
    delete from books
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from books
        where b_id = #{bId,jdbcType=INTEGER}
    </delete>
  <insert id="insert" parameterType="com.java.bean.Books">
    insert into books (b_id, b_isbn, b_name, 
      b_author, b_publisher, b_price, 
      b_coverPic, b_introduction, b_score, 
      b_storage, b_sales, b_discount, 
      b_type)
    values (#{bId,jdbcType=INTEGER}, #{bIsbn,jdbcType=VARCHAR}, #{bName,jdbcType=VARCHAR}, 
      #{bAuthor,jdbcType=VARCHAR}, #{bPublisher,jdbcType=VARCHAR}, #{bPrice,jdbcType=DOUBLE}, 
      #{bCoverpic,jdbcType=VARCHAR}, #{bIntroduction,jdbcType=VARCHAR}, #{bScore,jdbcType=DOUBLE},
      #{bStorage,jdbcType=INTEGER}, #{bSales,jdbcType=INTEGER}, #{bDiscount,jdbcType=DOUBLE}, 
      #{bType,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.java.bean.Books">
    insert into books
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bId != null">
        b_id,
      </if>
      <if test="bIsbn != null">
        b_isbn,
      </if>
      <if test="bName != null">
        b_name,
      </if>
      <if test="bAuthor != null">
        b_author,
      </if>
      <if test="bPublisher != null">
        b_publisher,
      </if>
      <if test="bPrice != null">
        b_price,
      </if>
      <if test="bCoverpic != null">
        b_coverPic,
      </if>
      <if test="bIntroduction != null">
        b_introduction,
      </if>
      <if test="bScore != null">
        b_score,
      </if>
      <if test="bStorage != null">
        b_storage,
      </if>
      <if test="bSales != null">
        b_sales,
      </if>
      <if test="bDiscount != null">
        b_discount,
      </if>
      <if test="bType != null">
        b_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bId != null">
        #{bId,jdbcType=INTEGER},
      </if>
      <if test="bIsbn != null">
        #{bIsbn,jdbcType=VARCHAR},
      </if>
      <if test="bName != null">
        #{bName,jdbcType=VARCHAR},
      </if>
      <if test="bAuthor != null">
        #{bAuthor,jdbcType=VARCHAR},
      </if>
      <if test="bPublisher != null">
        #{bPublisher,jdbcType=VARCHAR},
      </if>
      <if test="bPrice != null">
        #{bPrice,jdbcType=DOUBLE},
      </if>
      <if test="bCoverpic != null">
        #{bCoverpic,jdbcType=VARCHAR},
      </if>
      <if test="bIntroduction != null">
        #{bIntroduction,jdbcType=VARCHAR},
      </if>
      <if test="bScore != null">
        #{bScore,jdbcType=DOUBLE},
      </if>
      <if test="bStorage != null">
        #{bStorage,jdbcType=INTEGER},
      </if>
      <if test="bSales != null">
        #{bSales,jdbcType=INTEGER},
      </if>
      <if test="bDiscount != null">
        #{bDiscount,jdbcType=DOUBLE},
      </if>
      <if test="bType != null">
        #{bType,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.java.bean.BooksExample" resultType="java.lang.Long">
    select count(*) from books
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
    <update id="updateByPrimaryKeySelective" parameterType="com.java.bean.Books">
        update books
        <set>
            <if test="bIsbn != null">
                b_isbn = #{bIsbn,jdbcType=VARCHAR},
            </if>
            <if test="bName != null">
                b_name = #{bName,jdbcType=VARCHAR},
            </if>
            <if test="bAuthor != null">
                b_author = #{bAuthor,jdbcType=VARCHAR},
            </if>
            <if test="bPublisher != null">
                b_publisher = #{bPublisher,jdbcType=VARCHAR},
            </if>
            <if test="bPrice != null">
                b_price = #{bPrice,jdbcType=DOUBLE},
            </if>
            <if test="bCoverpic != null">
                b_coverpic = #{bCoverpic,jdbcType=VARCHAR},
            </if>

            <if test="bIntroduction != null">
                b_introduction = #{bIntroduction,jdbcType=VARCHAR},
            </if>
            <if test="bScore != null">
                b_score = #{bScore,jdbcType=DOUBLE},
            </if>
            <if test="bStorage != null">
                b_storage = #{bStorage,jdbcType=INTEGER},
            </if>
            <if test="bSales != null">
                b_sales = #{bSales,jdbcType=INTEGER},
            </if>
            <if test="bDiscount != null">
                b_discount = #{bDiscount,jdbcType=DOUBLE},
            </if>
            <if test="bType != null">
                b_type = #{bType,jdbcType=VARCHAR},
            </if>

        </set>
        where b_id = #{bId,jdbcType=INTEGER}
    </update>
  <update id="updateByExample" parameterType="map">
    update books
    set b_id = #{record.bId,jdbcType=INTEGER},
      b_isbn = #{record.bIsbn,jdbcType=VARCHAR},
      b_name = #{record.bName,jdbcType=VARCHAR},
      b_author = #{record.bAuthor,jdbcType=VARCHAR},
      b_publisher = #{record.bPublisher,jdbcType=VARCHAR},
      b_price = #{record.bPrice,jdbcType=DOUBLE},
      b_coverPic = #{record.bCoverpic,jdbcType=VARCHAR},
      b_introduction = #{record.bIntroduction,jdbcType=VARCHAR},
      b_score = #{record.bScore,jdbcType=DOUBLE},
      b_storage = #{record.bStorage,jdbcType=INTEGER},
      b_sales = #{record.bSales,jdbcType=INTEGER},
      b_discount = #{record.bDiscount,jdbcType=DOUBLE},
      b_type = #{record.bType,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
    <update id="updateByPrimaryKey" parameterType="com.java.bean.Books">
        update books
        set b_id=#{bId,jdbcType=INTEGER},
        b_isbn=#{bIsbn,jdbcType=VARCHAR},
        b_name=#{bName,jdbcType=VARCHAR},
        b_author=#{bAuthor,jdbcType=VARCHAR},
        b_publisher=#{bPublisher,jdbcType=VARCHAR},
        b_price=#{bPrice,jdbcType=DOUBLE},
        b_coverPic=#{bCoverpic,jdbcType=VARCHAR},
        b_introduction=#{bIntroduction,jdbcType=VARCHAR},
        b_score=#{bScore,jdbcType=DOUBLE},
        b_storage=#{bStorage,jdbcType=INTEGER},
        b_sales= #{bSales,jdbcType=INTEGER},
        b_discount= #{bDiscount,jdbcType=DOUBLE},
        b_type=#{bType,jdbcType=VARCHAR}
        where b_id = #{bId,jdbcType=INTEGER}
    </update>
</mapper>